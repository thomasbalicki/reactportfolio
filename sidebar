import React, { useState } from "react";
import { Link } from "react-router-dom";
import styled, { css } from "styled-components";

const SidebarLink = styled(Link)`
  display: flex;
  color: #e1e9fc;
  justify-content: space-between;
  align-items: center;
  padding: 20px;
  list-style: none;
  height: 60px;
  text-decoration: none;
  font-size: 14px;
  font-weight: bold;
 
  &:hover {
    background: #252831;
    color: #69C8AD;
    border-left: 4px solid #69C8AD;
    cursor: pointer;
  }

  ${(props) => props.id === 'active' && css`
    background: #252831;
    color: #69C8AD;
    cursor: pointer;
    border-left: 4px solid #69C8AD;
  `}
`;
 
const SidebarLabel = styled.span`
  margin-left: 16px;
  vertical-align: top;
`;

const DropdownContainer = styled.div`
transition: all 0.3s ease;
`
 
const DropdownLink = styled(Link)`
  background: #252831;
  height: 60px;
  padding-left: 2rem;
  display: flex;
  align-items: center;
  text-decoration: none;
  color: #f5f5f5;
  font-size: 14px;
  font-weight: bold;
  
 
  &:hover {
    background: #293846;
    color: #69C8AD;
    cursor: pointer;
    border-left: 4px solid #69C8AD;
  }
`;

const SubMenu = ({item}) => {
    const [subnav, setSubnav] = useState(false);
    const showSubnav = () => setSubnav(!subnav);

    return (
        <>
        <SidebarLink 
        to={item.path}
        onClick={item.subNav && showSubnav}
        id={window.location.pathname == item.path ? "active" : ""}
        >
            <div>
                {item.icon}
                <SidebarLabel>{item.title}</SidebarLabel>
            </div>
            <div>
                {item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed : null}
            </div>
        </SidebarLink>
        <DropdownContainer style={{ overflow: "hidden", maxHeight: subnav ? "300px" : "0" }}>
        {subnav && item.subNav.map((item, index) => {
            return (
                <DropdownLink to={item.path} key={index}>
                    {item.icon}
                    <SidebarLabel>{item.title}</SidebarLabel>
                </DropdownLink>
            );
        })}
        </DropdownContainer>
        </>
    );
};

export default SubMenu;

import React from "react";
import "../../index.css";
import { SidebarData } from "./SidebarData";
import SubMenu from "./SubMenu";


function Sidebar() {
    return (
        <div className="Sidebar">
            <p className="SidebarMainTitle">AB DATA</p>
            <p className="SidebarSubTitle">Donor Manager</p>
            <hr className="HrBorder"></hr>
            <ul className="SidebarList">
                {SidebarData.map((item, index)=> {
                    return <SubMenu item={item} key={index} />;
                })}
            </ul>
            <hr className="HrBorder"></hr>
        </div>
    );
}

export default Sidebar;

import { useState } from "react";
import { Routes, Route } from "react-router-dom";
import Topbar from "./scenes/global/Topbar";
import Dashboard from "./scenes/dashboard";
import Transactions from "./scenes/transactions";
import BatchManagement from "./scenes/batch-management";
import CampaignManagement from "./scenes/campaign-management";
import DonorManagement from "./scenes/donor-management";
import Reports from "./scenes/reports";
import { lightTheme } from "./theme";
import { CssBaseline, ThemeProvider } from "@mui/material";
import Login from "./scenes/login";
import Sidebar from "./scenes/global/Sidebar";

function App() {
    const [isSidebar, setIsSidebar] = useState(true);

    //authentication state would actually be made a global auth state when auth is setup
    //if authenticated we want to render the sidebar menu, if user is on login page and not authenticated sidebar should not be showing
    const [authenticated, setAuthenticated] = useState(true);

    return (
        <ThemeProvider theme={lightTheme}>
            <CssBaseline />
            <div className="app">
            { authenticated && <Sidebar setIsSidebar={setIsSidebar}/> }
                <main className="content">
                    <Topbar setIsSidebar={setIsSidebar}/>
                    <Routes>
                        {/*TODO: If authenticated user should not be able to access login page */}
                        <Route path="/login" element={<Login />} />              
                        <Route path="/" element={<Dashboard />} />
                        <Route path="/transactions" element={<Transactions />} />
                        <Route path="/batch-management" element={<BatchManagement />} />
                        <Route path="/campaign-management" element={<CampaignManagement />} />
                        <Route path="/donor-management" element={<DonorManagement />} />
                        <Route path="/reports" element={<Reports />} />
                    </Routes>
                </main>
            </div>
            </ThemeProvider>
    );
}

export default App;


